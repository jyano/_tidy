cjs._sp.char = Sprites.char = {
	framerate: 24,
	images: ["/char.png"],
	frames: [
		[0, 0, 256, 256, 0, -159, -138],
		[256, 0, 256, 256, 0, -159, -138],
		[512, 0, 256, 256, 0, -159, -138],
		[768, 0, 256, 256, 0, -159, -138],
		[1024, 0, 256, 256, 0, -159, -138],
		[1280, 0, 256, 256, 0, -159, -138],
		[1536, 0, 256, 256, 0, -159, -138],
		[0, 256, 256, 256, 0, -159, -138],
		[256, 256, 256, 256, 0, -159, -138],
		[512, 256, 256, 256, 0, -159, -138]],
	animations: {
		df: {"frames": [0]},
		jump: {"frames": [0, 1, 1, 2, 2, 3, 3, 3, 3], speed: 1, next: false},
		die: {"frames": [4, 5], speed: .1, next: false},
		hurt: {"frames": [4, 4, 4, 5, 5, 5, 4, 4, 5, 5, 4, 5, 0], speed: .4, next: false},
		fly: {"frames": [6, 6, 7, 8, 9], speed: .3},
		nuts: {frames: [3, 8, 2, 9, 2, 4, 5, 6, 5, 4, 5, 3]}
	}
}
cjs._sp.char2 = Sprites.char2 = {
	framerate: 24,
	images: ["/char2.png"],
	"frames": [
		[0, 0, 256, 256, 0, -159, -138],
		[256, 0, 256, 256, 0, -159, -138],
		[512, 0, 256, 256, 0, -159, -138],
		[768, 0, 256, 256, 0, -159, -138],
		[1024, 0, 256, 256, 0, -159, -138],
		[1280, 0, 256, 256, 0, -159, -138],
		[1536, 0, 256, 256, 0, -159, -138],
		[0, 256, 256, 256, 0, -159, -138],
		[256, 256, 256, 256, 0, -159, -138],
		[512, 256, 256, 256, 0, -159, -138]
	],
	animations: {
		df: {"frames": [0]},
		jump: {"frames": [0, 1, 1, 2, 2, 3, 3, 3, 3], speed: 1, next: false},
		die: {"frames": [4, 5], speed: .1, next: false},
		hurt: {"frames": [4, 4, 4, 5, 5, 5, 4, 4, 5, 5, 4, 5, 0], speed: .4, next: false},
		fly: {"frames": [6, 6, 7, 8, 9], speed: .3},
		nuts: {frames: [3, 8, 2, 9, 2, 4, 5, 6, 5, 4, 5, 3]}
	}
}
SPRY = function () {
	W([1200, 600, 2400, 1200], {g: 20})//.chalk('spritebox example')
//for 400 x 400 flash squares !!!
	//w.s.bm('earth', function(me){me.XY(400,400)fn()})
	//function fn(){
	y = w.spBox($$ship).track()
	$.K($$ship.key)
	$.K({  //takes a spritebox!//uses cjs.watchKeys()
		l: function () {
			y.rot(8, '-')
		},
		r: function () {
			y.rot(8, '+')
		},
		u: function () {
			y.I(0, -10)
		}
	})
	y.aD(.5)
//}
}
CHAR = function () {
	w = b2d.W().debug()
	w.begin(function (cx) {
		if (cx.with('hurt')) {
			b.p('hurt').I(100, -200)
		}
		if (cx.with('fly')) {
			b.p('fly').I(-100, -200)
		}
	})
	b = w.ball(200, 200, 60).bindSprite2(
			cjs.sprite(Sprites.char).rXY(275, 220))
	guyBrick(100).K('hurt')
	guyBrick(500).K('fly')
	function guyBrick(x) {
		return w.brick(x, 500, 100, 100)
				.bindSprite('guy', .6)
	}
}
CHA = CHAR0 = function () {
	showSprite(Sprites.char)
	function showSprite(sprite) {
		s = $St(1000)
		spr = $Sp(sprite).drag().a2(s)
	}
}
STICK = function () {
	w = b2d.W({grav: 3})
			.chalk('spritebox example').debug()
	w.spriteBox({
		"framerate": 4,
		"images": ["stick.png"],
		"frames": [
			[0, 0, 512, 512, 0, -22, -2],
			[512, 0, 512, 512, 0, -22, -2],
			[1024, 0, 512, 512, 0, -22, -2],
			[0, 512, 512, 512, 0, -22, -2],
			[512, 512, 512, 512, 0, -22, -2],
			[1024, 512, 512, 512, 0, -22, -2],
			[0, 1024, 512, 512, 0, -22, -2],
			[512, 1024, 512, 512, 0, -22, -2],
			[1024, 1024, 512, 512, 0, -22, -2],
			[0, 1536, 512, 512, 0, -22, -2],
			[512, 1536, 512, 512, 0, -22, -2],
			[1024, 1536, 512, 512, 0, -22, -2]
		],
		"animations": {
			"die": {"frames": [8, 9, 10], "speed": .1, next: false},
			"walk": {"frames": [1, 2, 3, 4], "speed": .1},
			"jump": {"frames": [5, 6, 7, 0], "speed": .1, next: false}
		}
	}, 300, 200, .25).mario()
	w.rect(600, 200, 50, 50, 'p')
	w.circ(600, 100, 40, 'b')
}
$$ship = {
	framerate: 24,
	images: ["thrusty.png"],
	frames: [
		[0, 0, 512, 512, 0, -53, -36],
		[512, 0, 512, 512, 0, -53, -36],
		[1024, 0, 512, 512, 0, -53, -36],
		[0, 512, 512, 512, 0, -53, -36],
		[512, 512, 512, 512, 0, -53, -36],
		[1024, 512, 512, 512, 0, -53, -36],
		[0, 1024, 512, 512, 0, -53, -36],
		[512, 1024, 512, 512, 0, -53, -36],
		[1024, 1024, 512, 512, 0, -53, -36],
		[0, 1536, 512, 512, 0, -53, -36],
		[512, 1536, 512, 512, 0, -53, -36]],
	animations: {
		die: {speed: 1, frames: [8, 9, 10], next: false},
		shoot: {speed: 1, frames: [1, 2, 3, 4, 0], next: false},
		thrust: {speed: 1, frames: [5, 6, 7, 0], next: false}
	}
}
$$ship.key = {  //takes a spritebox!//uses cjs.watchKeys()
	d: function () {
		y.p('shoot')
	},
	u: function () {
		y.p('thrust')
	}
}
Smoke = {
	"framerate": 24,
	"images": ["/electric_0.png", "/electric_1.png", "/electric_2.png"],
	"frames": [
		[2, 2, 512, 512, 0, -58, -117],
		[518, 2, 512, 512, 0, -58, -117],
		[1034, 2, 512, 512, 0, -58, -117],
		[2, 518, 512, 512, 0, -58, -117],
		[518, 518, 512, 512, 0, -58, -117],
		[1034, 518, 512, 512, 0, -58, -117],
		[2, 1034, 512, 512, 0, -58, -117],
		[518, 1034, 512, 512, 0, -58, -117],
		[1034, 1034, 512, 512, 0, -58, -117],
		[2, 2, 512, 512, 1, -58, -117],
		[518, 2, 512, 512, 1, -58, -117],
		[1034, 2, 512, 512, 1, -58, -117],
		[2, 518, 512, 512, 1, -58, -117],
		[518, 518, 512, 512, 1, -58, -117],
		[1034, 518, 512, 512, 1, -58, -117],
		[2, 1034, 512, 512, 1, -58, -117],
		[518, 1034, 512, 512, 1, -58, -117],
		[1034, 1034, 512, 512, 1, -58, -117],
		[2, 2, 512, 512, 2, -58, -117]
	],
	"animations": {
		"sizzle": {"frames": [10, 11, 12, 13, 14, 15, 16, 17, 18], "speed": 1},
		"warp": {"frames": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "speed": 1}
	}
}
Pack = {
	"framerate": 24,
	"images": [
		"/pack_0.png",
		"/pack_1.png",
		"/pack_2.png",
		"/pack_3.png",
		"/pack_4.png",
		"/pack_5.png",
		"/pack_6.png",
		"/pack_7.png",
		"/pack_8.png",
		"/pack_9.png",
		"/pack_10.png",
		"/pack_11.png",
		"/pack_12.png",
		"/pack_13.png",
		"/pack_14.png",
		"/pack_15.png",
		"/pack_16.png",
		"/pack_17.png",
		"/pack_18.png"
	],
	"frames": [
		[2, 2, 512, 512, 0, -3, -1],
		[518, 2, 512, 512, 0, -3, -1],
		[1034, 2, 512, 512, 0, -3, -1],
		[2, 518, 512, 512, 0, -3, -1],
		[518, 518, 512, 512, 0, -3, -1],
		[1034, 518, 512, 512, 0, -3, -1],
		[2, 1034, 512, 512, 0, -3, -1],
		[518, 1034, 512, 512, 0, -3, -1],
		[1034, 1034, 512, 512, 0, -3, -1],
		[2, 2, 512, 512, 1, -3, -1],
		[518, 2, 512, 512, 1, -3, -1],
		[1034, 2, 512, 512, 1, -3, -1],
		[2, 518, 512, 512, 1, -3, -1],
		[518, 518, 512, 512, 1, -3, -1],
		[1034, 518, 512, 512, 1, -3, -1],
		[2, 1034, 512, 512, 1, -3, -1],
		[518, 1034, 512, 512, 1, -3, -1],
		[1034, 1034, 512, 512, 1, -3, -1],
		[2, 2, 512, 512, 2, -3, -1],
		[518, 2, 512, 512, 2, -3, -1],
		[1034, 2, 512, 512, 2, -3, -1],
		[2, 518, 512, 512, 2, -3, -1],
		[518, 518, 512, 512, 2, -3, -1],
		[1034, 518, 512, 512, 2, -3, -1],
		[2, 1034, 512, 512, 2, -3, -1],
		[518, 1034, 512, 512, 2, -3, -1],
		[1034, 1034, 512, 512, 2, -3, -1],
		[2, 2, 512, 512, 3, -3, -1],
		[518, 2, 512, 512, 3, -3, -1],
		[1034, 2, 512, 512, 3, -3, -1],
		[2, 518, 512, 512, 3, -3, -1],
		[518, 518, 512, 512, 3, -3, -1],
		[1034, 518, 512, 512, 3, -3, -1],
		[2, 1034, 512, 512, 3, -3, -1],
		[518, 1034, 512, 512, 3, -3, -1],
		[1034, 1034, 512, 512, 3, -3, -1],
		[2, 2, 512, 512, 4, -3, -1],
		[518, 2, 512, 512, 4, -3, -1],
		[1034, 2, 512, 512, 4, -3, -1],
		[2, 518, 512, 512, 4, -3, -1],
		[518, 518, 512, 512, 4, -3, -1],
		[1034, 518, 512, 512, 4, -3, -1],
		[2, 1034, 512, 512, 4, -3, -1],
		[518, 1034, 512, 512, 4, -3, -1],
		[1034, 1034, 512, 512, 4, -3, -1],
		[2, 2, 512, 512, 5, -3, -1],
		[518, 2, 512, 512, 5, -3, -1],
		[1034, 2, 512, 512, 5, -3, -1],
		[2, 518, 512, 512, 5, -3, -1],
		[518, 518, 512, 512, 5, -3, -1],
		[1034, 518, 512, 512, 5, -3, -1],
		[2, 1034, 512, 512, 5, -3, -1],
		[518, 1034, 512, 512, 5, -3, -1],
		[1034, 1034, 512, 512, 5, -3, -1],
		[2, 2, 512, 512, 6, -3, -1],
		[518, 2, 512, 512, 6, -3, -1],
		[1034, 2, 512, 512, 6, -3, -1],
		[2, 518, 512, 512, 6, -3, -1],
		[518, 518, 512, 512, 6, -3, -1],
		[1034, 518, 512, 512, 6, -3, -1],
		[2, 1034, 512, 512, 6, -3, -1],
		[518, 1034, 512, 512, 6, -3, -1],
		[1034, 1034, 512, 512, 6, -3, -1],
		[2, 2, 512, 512, 7, -3, -1],
		[518, 2, 512, 512, 7, -3, -1],
		[1034, 2, 512, 512, 7, -3, -1],
		[2, 518, 512, 512, 7, -3, -1],
		[518, 518, 512, 512, 7, -3, -1],
		[1034, 518, 512, 512, 7, -3, -1],
		[2, 1034, 512, 512, 7, -3, -1],
		[518, 1034, 512, 512, 7, -3, -1],
		[1034, 1034, 512, 512, 7, -3, -1],
		[2, 2, 512, 512, 8, -3, -1],
		[518, 2, 512, 512, 8, -3, -1],
		[1034, 2, 512, 512, 8, -3, -1],
		[2, 518, 512, 512, 8, -3, -1],
		[518, 518, 512, 512, 8, -3, -1],
		[1034, 518, 512, 512, 8, -3, -1],
		[2, 1034, 512, 512, 8, -3, -1],
		[518, 1034, 512, 512, 8, -3, -1],
		[1034, 1034, 512, 512, 8, -3, -1],
		[2, 2, 512, 512, 9, -3, -1],
		[518, 2, 512, 512, 9, -3, -1],
		[1034, 2, 512, 512, 9, -3, -1],
		[2, 518, 512, 512, 9, -3, -1],
		[518, 518, 512, 512, 9, -3, -1],
		[1034, 518, 512, 512, 9, -3, -1],
		[2, 1034, 512, 512, 9, -3, -1],
		[518, 1034, 512, 512, 9, -3, -1],
		[1034, 1034, 512, 512, 9, -3, -1],
		[2, 2, 512, 512, 10, -3, -1],
		[518, 2, 512, 512, 10, -3, -1],
		[1034, 2, 512, 512, 10, -3, -1],
		[2, 518, 512, 512, 10, -3, -1],
		[518, 518, 512, 512, 10, -3, -1],
		[1034, 518, 512, 512, 10, -3, -1],
		[2, 1034, 512, 512, 10, -3, -1],
		[518, 1034, 512, 512, 10, -3, -1],
		[1034, 1034, 512, 512, 10, -3, -1],
		[2, 2, 512, 512, 11, -3, -1],
		[518, 2, 512, 512, 11, -3, -1],
		[1034, 2, 512, 512, 11, -3, -1],
		[2, 518, 512, 512, 11, -3, -1],
		[518, 518, 512, 512, 11, -3, -1],
		[1034, 518, 512, 512, 11, -3, -1],
		[2, 1034, 512, 512, 11, -3, -1],
		[518, 1034, 512, 512, 11, -3, -1],
		[1034, 1034, 512, 512, 11, -3, -1],
		[2, 2, 512, 512, 12, -3, -1],
		[518, 2, 512, 512, 12, -3, -1],
		[1034, 2, 512, 512, 12, -3, -1],
		[2, 518, 512, 512, 12, -3, -1],
		[518, 518, 512, 512, 12, -3, -1],
		[1034, 518, 512, 512, 12, -3, -1],
		[2, 1034, 512, 512, 12, -3, -1],
		[518, 1034, 512, 512, 12, -3, -1],
		[1034, 1034, 512, 512, 12, -3, -1],
		[2, 2, 512, 512, 13, -3, -1],
		[518, 2, 512, 512, 13, -3, -1],
		[1034, 2, 512, 512, 13, -3, -1],
		[2, 518, 512, 512, 13, -3, -1],
		[518, 518, 512, 512, 13, -3, -1],
		[1034, 518, 512, 512, 13, -3, -1],
		[2, 1034, 512, 512, 13, -3, -1],
		[518, 1034, 512, 512, 13, -3, -1],
		[1034, 1034, 512, 512, 13, -3, -1],
		[2, 2, 512, 512, 14, -3, -1],
		[518, 2, 512, 512, 14, -3, -1],
		[1034, 2, 512, 512, 14, -3, -1],
		[2, 518, 512, 512, 14, -3, -1],
		[518, 518, 512, 512, 14, -3, -1],
		[1034, 518, 512, 512, 14, -3, -1],
		[2, 1034, 512, 512, 14, -3, -1],
		[518, 1034, 512, 512, 14, -3, -1],
		[1034, 1034, 512, 512, 14, -3, -1],
		[2, 2, 512, 512, 15, -3, -1],
		[518, 2, 512, 512, 15, -3, -1],
		[1034, 2, 512, 512, 15, -3, -1],
		[2, 518, 512, 512, 15, -3, -1],
		[518, 518, 512, 512, 15, -3, -1],
		[1034, 518, 512, 512, 15, -3, -1],
		[2, 1034, 512, 512, 15, -3, -1],
		[518, 1034, 512, 512, 15, -3, -1],
		[1034, 1034, 512, 512, 15, -3, -1],
		[2, 2, 512, 512, 16, -3, -1],
		[518, 2, 512, 512, 16, -3, -1],
		[1034, 2, 512, 512, 16, -3, -1],
		[2, 518, 512, 512, 16, -3, -1],
		[518, 518, 512, 512, 16, -3, -1],
		[1034, 518, 512, 512, 16, -3, -1],
		[2, 1034, 512, 512, 16, -3, -1],
		[518, 1034, 512, 512, 16, -3, -1],
		[1034, 1034, 512, 512, 16, -3, -1],
		[2, 2, 512, 512, 17, -3, -1],
		[518, 2, 512, 512, 17, -3, -1],
		[1034, 2, 512, 512, 17, -3, -1],
		[2, 518, 512, 512, 17, -3, -1],
		[518, 518, 512, 512, 17, -3, -1],
		[1034, 518, 512, 512, 17, -3, -1],
		[2, 1034, 512, 512, 17, -3, -1],
		[518, 1034, 512, 512, 17, -3, -1],
		[1034, 1034, 512, 512, 17, -3, -1],
		[2, 2, 512, 512, 18, -3, -1],
		[518, 2, 512, 512, 18, -3, -1],
		[1034, 2, 512, 512, 18, -3, -1],
		[2, 518, 512, 512, 18, -3, -1],
		[518, 518, 512, 512, 18, -3, -1],
		[1034, 518, 512, 512, 18, -3, -1],
		[2, 1034, 512, 512, 18, -3, -1],
		[518, 1034, 512, 512, 18, -3, -1]
	],
	"animations": {
		"b1": {"frames": [1, 2, 3, 4], "speed": 1},
		"b2": {"frames": [5, 6, 7, 8, 9], "speed": 1},
		"b3": {"frames": [10, 11, 12, 13, 14], "speed": 1},  //15
		"c1": {"frames": [16, 17, 18], "speed": 1},
		"c2": {"frames": [19, 20, 21, 22], "speed": 1},
		"c3": {"frames": [23, 24, 25, 26, 27], "speed": 1},
		"c4": {"frames": [28, 29, 30], "speed": 1},
		"s1": {"frames": [96, 97, 98, 99, 100, 101, 102, 103, 104], "speed": 1},
		"s2": {"frames": [105, 106, 107, 108, 109, 110, 111, 112, 113], "speed": 1},
		"s3": {"frames": [114, 115, 116, 117, 118, 119, 120, 121, 122], "speed": 1},
		"s4": {"frames": [123, 124, 125, 126, 127, 128, 129, 130, 131], "speed": 1},
		"e1": {"frames": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "speed": 1},
		"e2": {"frames": [142, 143, 144, 145, 146, 147, 148, 149], "speed": 1},
		"e3": {"frames": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "speed": 1},
		"e4": {"frames": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "speed": 1},
		"f1": {"frames": [31, 32, 33, 34, 35], "speed": 1},
		"f2": {"frames": [36, 37, 38, 39, 40, 41, 42, 43], "speed": 1},
		"f3": {"frames": [44, 45, 46, 47, 48, 49], "speed": 1},
		"f4": {
			"frames": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76],
			"speed": 1
		},
		"p1": {"frames": [77, 78, 79, 80, 81], "speed": 1},
		"p2": {"frames": [82, 83, 84, 85], "speed": 1},
		"p3": {"frames": [86, 87, 88, 89, 90], "speed": 1},
		"p4": {"frames": [91, 92, 93, 94, 95], "speed": 1}
	}
}
PACK = function () {
	stage = $St(800)
	//stage.op(.7)
	sprite = $sprite(Pack).XY(200, 260).sXY(1.2).drag()
	stage.A(sprite)
	//.rgc()
	sprite.framerate = 6
	sprite.play()
}
sprites = Sprites = cjs._sp = {}
Mummy = {
	"framerate": 24,
	"images": ["/assets/sprites/metalslug_mummy37x45.png"],
	"frames": [
		[0, 0, 40, 45, 0, 0, 0],
		[37, 0, 40, 45, 0, 0, 0],
		[74, 0, 40, 45, 0, 0, 0],
		[111, 0, 40, 45, 0, 0, 0],
		[148, 0, 40, 45, 0, 0, 0],
		[0, 46, 40, 45, 0, 0, 0],
		[37, 46, 40, 45, 0, 0, 0],
		[74, 46, 40, 45, 0, 0, 0],
		[111, 46, 40, 45, 0, 0, 0],
		[148, 46, 40, 45, 0, 0, 0],
	],
	"animations": {
		"walk": {"frames": [0, 1, 2, 3, 4, 5], "speed": .5}
	}
}
MUMMYFLIP = function () {
	w = b2d.W() //spriteUrl = "/assets/sprites/metalslug_mummy37x45.png"
//sprite always assumed to start facing right (and flipping it horizontqlly is the left) - so i must draw facing right
	b = b2d.box(100, 100, 50, 88).K('mummy').bindSprite2(
			cjs.sprite(Mummy).a2(w.s).drag()
					.rXY(20, 22).sXY(2).XY(200))
	b.coll(function () {
		b.linVel(0)
	})
	b.sprite.p('walk')
	$t(function () {
		b.rT(0)
		if (b.direction == 'right') {
			b.I(4, -2)
		}
		else if (b.direction == 'left') {
			b.I(-4, -2)
		}    // direction='neither' // <-- demumify (doesnt keep walking
		//if(jumpButton is pressed){jump()}
	})
	$.kD({
		u: function () {
			//jumpButtonPressed = true
			if (b.Y() > 530) {
				b.I(0, -80)
			}
		},
		U: function () {
			//jumpButtonPressed = false
		},
		l: function () {
			b.sprite.sX(-2)
			b.direction = 'left'
		},
		r: function () {
			b.sprite.sX(2)
			b.direction = 'right'
		}
	})
}
KEYBOARDWALK = SID = SIDE = function () {
	$sideSp = side = function () {
		this.initialize();
	}
	$sideSp.prototype = $Sp()
	$sideSp.prototype.Sprite_initialize = side_p.initialize;
	$sideSp.prototype.initialize = function () {
		this.Sprite_initialize(side._SpriteSheet);
		this.paused = false;
	}
	$sideSp.prototype.walkLeft = function () {
		this.gotoAndPlay("walkLeft");
	}
	$sideSp.prototype.takeoff = function () {
		this.gotoAndPlay("takeoff");
	}
	$sideSp._SpriteSheet = $SS({
		images: ["side.png"],
		frames: [[0, 0, 519, 297, 0, 236.95, 39.5], [0, 0, 519, 297, 0, 236.95, 39.5], [0, 0, 519, 297, 0, 236.95, 39.5], [519, 0, 488, 290, 0, 216.95, 39.5], [519, 0, 488, 290, 0, 216.95, 39.5], [519, 0, 488, 290, 0, 216.95, 39.5], [0, 297, 352, 315, 0, 253.95, 49.5], [0, 297, 352, 315, 0, 253.95, 49.5], [352, 297, 383, 326, 0, 186.95, 79.5], [352, 297, 383, 326, 0, 186.95, 79.5], [0, 623, 550, 337, 0, 315.95, 95.5], [0, 623, 550, 337, 0, 315.95, 95.5], [0, 960, 520, 534, 0, 315.95, 214.5], [0, 960, 520, 534, 0, 315.95, 214.5], [0, 1494, 543, 552, 0, 330.95, 226.5]],
		animations: {walkLeft: [0, 9, true], takeoff: [10, 11, true]}
	})
	st = $St()
	sp = new $sideSp().XY(400, 200).a2(st).walkLeft().sXY(.5).gotoAndStop()
	var lfHeld
	var rtHeld
	var upHeld
	var dnHeld
	var keyDn = false
	document.onkeydown = handleKeyDown
	document.onkeyup = handleKeyUp
	$t(function () {
		if (lfHeld) {
			sp.x -= 15
		}
		if (rtHeld) {
			sp.x += 15
		}
		if (upHeld) {
			sp.y -= 4
		}
		if (dnHeld) {
			sp.y += 4
		}
		if (lfHeld && !keyDn) {
			sp.scX(.5).p('walkLeft')
			keyDn = true
		}
		if (rtHeld && !keyDn) {
			sp.scX(-.5).p('walkLeft')
			keyDn = true
		}
		if (upHeld && !keyDn) {
			sp.p('takeoff')
			keyDn = true
		}
	})
	function handleKeyDown(e) {
		switch (e.keyCode) {
			case 37:
				lfHeld = true;
				break
			case 39:
				rtHeld = true;
				break
			case 38:
				upHeld = true;
				break
			case 40:
				dnHeld = true;
				break
		}
	}
	
	function handleKeyUp(e) {
		switch (e.keyCode) {
			case 37:
				sp.gotoAndStop('walkLeft')
				keyDn = false;
				lfHeld = false;
				break
			case 39:
				sp.gotoAndStop('walkLeft')
				keyDn = false;
				rtHeld = false;
				break
			case 38:
				sp.gotoAndStop('takeoff')
				keyDn = false
				upHeld = false;
				break
			case 40:
				sp.gotoAndStop('takeoff')
				keyDn = false
				dnHeld = false;
				break
		}
	}
}